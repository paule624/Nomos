import React, { useState } from "react";
import Login from "../components/auth/Login";
import Register from "../components/auth/Register";
import Logo from "/Logo_Nom_Dark.png";

function AuthPage({ onLoginSuccess }) {
  const [isLogin, setIsLogin] = useState(true);

  const handleLoginSuccess = () => {
    if (onLoginSuccess) onLoginSuccess();
  };

  const handleRegisterSuccess = () => {
    setIsLogin(true);
  };

  return (
    <div className="relative h-full flex flex-col px-4 md:px-6 bg-[#F2F4F3] overflow-hidden">
      {/* Background SVG */}
      <div className="absolute inset-0 w-full h-full pointer-events-none">
        <svg
          className="absolute w-full h-full max-w-none"
          viewBox="0 0 400 724"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          preserveAspectRatio="xMidYMid slice"
          style={{
            minHeight: "100%",
            minWidth: "100%",
            position: "absolute",
            top: "50%",
            left: "50%",
            transform: "translate(-50%, -50%)",
          }}
        >
          <path
            d="M376.751 408.9H376.695C417.289 365.472 442.227 307.137 442.227 243.031C442.227 108.991 333.473 0 199.724 0C65.9759 0 -42.7227 108.991 -42.7227 242.975C-42.7227 307.025 -17.8405 365.416 22.6978 408.844C22.8655 409.012 22.9774 409.124 23.0892 409.292C26.3323 412.711 29.6312 416.073 33.0421 419.267L33.1539 419.379C57.0296 443.699 71.9588 461.799 93.4302 515.146C96.3377 522.318 103.271 527.026 110.987 527.026H288.461C296.178 527.026 303.167 522.318 306.019 515.146C330.453 454.458 346.389 439.384 376.695 408.844L376.751 408.9ZM95.499 77.6109C98.0152 76.0418 100.979 78.8437 99.469 81.4774C98.798 82.6542 98.127 83.831 97.5119 85.0077C96.1141 87.5294 94.7721 90.1631 93.4302 92.7968C89.7957 100.082 86.4408 107.703 83.4214 115.604C71.847 145.752 64.5222 180.326 62.1737 216.694C62.0619 218.151 60.8318 219.328 59.3221 219.328H9.11047C7.37711 219.328 6.09107 217.815 6.31473 216.134C14.3106 157.912 48.0273 107.759 95.499 77.6109ZM104.837 413.943C52.4445 384.636 14.8697 331.85 6.37064 269.817C6.14698 268.136 7.43302 266.623 9.16639 266.623H59.378C60.8877 266.623 62.1178 267.8 62.2296 269.257C64.5781 305.624 71.9029 340.199 83.4773 370.347C86.4967 378.304 89.8516 385.869 93.4861 393.154C94.828 395.787 96.17 398.421 97.5679 400.943C100.084 405.594 102.712 410.021 105.452 414.224C105.508 414.392 105.62 414.504 105.731 414.672C105.564 414.336 105.228 414.111 104.893 413.887L104.837 413.943ZM176.128 410.413C175.793 413.999 173.053 413.159 170.201 411.254C142.803 389.063 118.704 337.565 113.615 269.705C113.504 268.08 114.846 266.679 116.467 266.679H173.333C174.898 266.679 176.184 267.912 176.184 269.537V410.413H176.128ZM176.128 216.47C176.128 218.039 174.842 219.328 173.277 219.328H116.411C114.79 219.328 113.448 217.927 113.56 216.302C118.424 151.075 140.846 100.978 166.958 77.4988C170.593 74.3607 175.625 70.9425 176.072 75.9858V216.526L176.128 216.47ZM229.247 411.254C226.396 413.159 223.656 413.999 223.376 410.413V269.537C223.376 267.968 224.607 266.679 226.228 266.679H283.038C284.715 266.679 286.001 268.08 285.889 269.705C280.745 337.565 256.702 389.063 229.247 411.254ZM283.038 219.328H226.228C224.662 219.328 223.376 218.095 223.376 216.47V75.8177C223.824 70.9985 228.912 74.3607 232.491 77.4988C258.547 101.034 280.969 151.075 285.889 216.302C286.001 217.927 284.659 219.328 283.038 219.328ZM303.95 77.6109C351.422 107.759 385.138 157.912 393.134 216.134C393.358 217.815 392.072 219.328 390.338 219.328H340.127C338.617 219.328 337.387 218.151 337.275 216.694C334.927 180.326 327.658 145.752 316.083 115.604C313.008 107.647 309.709 100.026 306.019 92.7408C304.677 90.1631 303.335 87.4733 301.937 84.9517C301.322 83.7189 300.651 82.5981 299.98 81.4214C298.526 78.8437 301.434 75.9858 303.95 77.5548V77.6109ZM303.95 408.452C301.49 410.021 298.526 407.163 299.98 404.585C300.651 403.352 301.322 402.232 301.937 400.999C303.335 398.421 304.677 395.843 306.019 393.21C309.653 385.925 313.008 378.304 316.083 370.403C327.658 340.255 334.927 305.68 337.275 269.313C337.387 267.856 338.617 266.679 340.127 266.679H390.338C392.072 266.679 393.358 268.192 393.134 269.873C385.082 328.151 351.422 378.304 303.894 408.452H303.95Z"
            fill="black"
            fillOpacity="0.05"
          />
          <path
            d="M284.87 631.875H117.349C110.36 631.875 105.775 639.272 108.627 645.829L140.219 718.228C141.784 721.758 145.195 724 148.941 724H246.904C250.371 724 253.67 722.039 255.347 718.844L293.37 646.501C296.836 639.889 292.195 631.875 284.926 631.875H284.87ZM240.586 682.981C238.629 687.968 234.883 691.05 230.801 691.05H167.561C165.38 691.05 163.311 690.154 161.522 688.585C159.789 687.016 158.335 684.774 157.44 681.972C154.085 671.774 159.509 660.23 167.561 660.23H230.801C237.287 660.23 241.984 667.571 241.984 675.696C241.984 678.106 241.536 680.571 240.586 683.037V682.981Z"
            fill="black"
            fillOpacity="0.05"
          />
        </svg>
      </div>

      {/* Content */}
      <div className="relative z-10 flex flex-col items-center justify-center py-8 md:py-0 min-h-full w-full max-w-md mx-auto">
        <img
          src={Logo}
          alt="Nomos"
          className="w-[60%] max-w-[220px] mb-4 md:mb-6"
        />
        <div className="w-full bg-white/10 backdrop-blur-md rounded-2xl md:rounded-3xl p-5 md:p-8 shadow-lg">
          <div className="mb-4 md:mb-8 text-center">
            <h2 className="text-xl md:text-2xl font-semibold text-[#22333B]">
              {isLogin ? "Connexion" : "Inscription"}
            </h2>
          </div>

          {isLogin ? (
            <>
              <Login onLoginSuccess={handleLoginSuccess} />
              <div className="mt-4 md:mt-6 text-center">
                <p className="text-[#22333B] text-sm md:text-base">
                  Pas encore de compte ?{" "}
                  <button
                    onClick={() => setIsLogin(false)}
                    className="font-semibold text-[#22333B] hover:text-[#D7F75B] transition-colors"
                  >
                    S'inscrire
                  </button>
                </p>
              </div>
            </>
          ) : (
            <>
              <Register onRegisterSuccess={handleRegisterSuccess} />
              <div className="mt-4 md:mt-6 text-center">
                <p className="text-[#22333B] text-sm md:text-base">
                  Déjà un compte ?{" "}
                  <button
                    onClick={() => setIsLogin(true)}
                    className="font-semibold text-[#22333B] hover:text-[#D7F75B] transition-colors"
                  >
                    Se connecter
                  </button>
                </p>
              </div>
            </>
          )}
        </div>
      </div>
    </div>
  );
}

export default AuthPage;
